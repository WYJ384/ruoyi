<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysLogininforMapper">

	<resultMap type="SysLogininfor" id="SysLogininforResult">
		<id     property="infoId"        column="info_id"           />
		<result property="loginName"     column="login_name"        />
		<result property="status"        column="status"            />
		<result property="ipaddr"        column="ipaddr"            />
		<result property="loginLocation" column="login_location"    />
		<result property="browser"       column="browser"           />
		<result property="os"            column="os"                />
		<result property="msg"           column="msg"               />
		<result property="loginTime"     column="login_time"        />
		<association property="sysUser"    column="login_name" javaType="SysUser" resultMap="userResult" />
	</resultMap>
	<resultMap id="userResult" type="SysUser">
		<id     property="userId"       column="user_id"      />
		<result property="loginName"    column="login_name"   />
		<result property="userName"     column="user_name"    />
	</resultMap>
	<insert id="insertLogininfor" parameterType="SysLogininfor">
		insert into sys_logininfor (login_name, status, ipaddr, login_location, browser, os, msg, login_time)
		values (#{loginName}, #{status}, #{ipaddr}, #{loginLocation}, #{browser}, #{os}, #{msg}, sysdate())
	</insert>
	
	<select id="selectLogininforList" parameterType="SysLogininfor" resultMap="SysLogininforResult">
		SELECT
		info_id,
		sys_logininfor.login_name,
		ipaddr,
		login_location,
		browser,
		os,
		sys_logininfor.STATUS,
		msg,
		login_time,
		sys_user.user_name,
		sys_user.user_id
		FROM
		sys_logininfor
		INNER JOIN sys_user ON sys_user.login_name = sys_logininfor.login_name
		<where>
			<if test="ipaddr != null and ipaddr != ''">
				AND sys_logininfor.ipaddr like concat('%', #{ipaddr}, '%')
			</if>
			<if test="status != null and status != ''">
				AND  sys_logininfor.status = #{status}
			</if>
			<if test="loginName != null and loginName != ''">
				AND  sys_logininfor.login_name like concat('%', #{loginName}, '%')
			</if>
			<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
				and date_format(sys_logininfor.login_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
			</if>
			<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
				and date_format( sys_logininfor.login_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
			</if>
		</where>
	</select>
	
	<delete id="deleteLogininforByIds" parameterType="String">
 		delete from sys_logininfor where info_id in
 		<foreach collection="array" item="infoId" open="(" separator="," close=")">
 			#{infoId}
        </foreach> 
 	</delete>
    
    <update id="cleanLogininfor">
        truncate table sys_logininfor
    </update>
    <select id="getDeptLoginCount" resultType="com.ruoyi.system.domain.EchartVo">
		SELECT sys_dept.dept_name name ,count(1) as value from sys_logininfor login
		INNER JOIN sys_user on sys_user.login_name= login.login_name
		INNER JOIN sys_dept on sys_dept.dept_id= sys_user.dept_id
		GROUP BY dept_name
	</select>

<!--	会议室预约次数-->
	<select id="getMeetRoomCount" resultType="com.ruoyi.system.domain.EchartVo">
	SELECT meetroom_name name,count(1) value from meeting
	RIGHT  JOIN meetroom on meeting.meetroom_id =meetroom.id
	GROUP BY meetroom_name
	</select>
	<!--	按部门统计会议室预约次数-->
	<select id="getMeetingCountByDept" resultType="com.ruoyi.system.domain.EchartVo">
		SELECT  sys_dept.dept_name name ,count(1) as value from meeting
		INNER JOIN sys_user on sys_user.login_name= meeting.created_by
		INNER JOIN sys_dept on sys_dept.dept_id= sys_user.dept_id
		GROUP BY dept_name
	</select>
<!--	最近一周访问人数-->
	<select id="weekLoginCount" resultType="com.ruoyi.system.domain.EchartVo">
		SELECT  date_format(login.login_time, '%Y-%m-%d') name ,count(1) value from sys_logininfor login
		INNER JOIN sys_user on sys_user.login_name= login.login_name
		INNER JOIN sys_dept on sys_dept.dept_id= sys_user.dept_id
		where DATE_SUB(CURDATE(), INTERVAL 7 DAY) <![CDATA[ <= ]]> date(login_time)
		GROUP BY date_format(login.login_time, '%Y-%m-%d')

	</select>

</mapper> 