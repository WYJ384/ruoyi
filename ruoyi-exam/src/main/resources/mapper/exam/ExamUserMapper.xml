<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.exam.mapper.ExamUserMapper">
    
    <resultMap type="ExamUser" id="ExamUserResult">
        <result property="examId"    column="exam_id"    />
        <result property="userId"    column="user_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createDate"    column="create_date"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateDate"    column="update_date"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
        <association property="sysUser"    column="user_id" javaType="SysUser" resultMap="SysUserResult" />
    </resultMap>
    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="user_name"    />
        <association property="dept"    column="dept_id" javaType="SysDept" resultMap="deptResult" />
    </resultMap>
    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"   column="dept_id"     />
        <result property="parentId" column="parent_id"   />
        <result property="deptName" column="dept_name"   />
        <result property="orderNum" column="order_num"   />
        <result property="status"   column="dept_status" />
    </resultMap>
    <sql id="selectExamUserVo">
        SELECT
            exam_id,
            exam_exam_user.user_id,
            exam_exam_user.create_by,
            exam_exam_user.create_date,
            exam_exam_user.update_by,
            exam_exam_user.update_date,
            exam_exam_user.remark,
            exam_exam_user.del_flag,
            sys_user.user_name,
            sys_user.dept_id,
            d.dept_name
        FROM
            exam_exam_user
            INNER JOIN sys_user on sys_user.user_id= exam_exam_user.user_id
            LEFT JOIN sys_dept d on sys_user.dept_id = d.dept_id
    </sql>
	
    <select id="selectExamUserList" parameterType="ExamUser" resultMap="ExamUserResult">
        <include refid="selectExamUserVo"/>
        <where>  
            <if test="examId != null  and examId != '' "> and exam_id = #{examId}</if>
             <if test="userId != null  and userId != '' "> and exam_exam_user.user_id = #{userId}</if>
             <if test="createBy != null  and createBy != '' "> and create_by = #{createBy}</if>
             <if test="createDate != null "> and create_date = #{createDate}</if>
             <if test="updateBy != null  and updateBy != '' "> and update_by = #{updateBy}</if>
             <if test="updateDate != null "> and update_date = #{updateDate}</if>
             <if test="remark != null  and remark != '' "> and remark = #{remark}</if>
             <if test="delFlag != null  and delFlag != '' "> and del_flag = #{delFlag}</if>
            <if test="userName != null  and userName != '' "> and sys_user.user_name like concat('%',#{userName},'%') </if>
         </where>
    </select>
    
    <select id="selectExamUserById" parameterType="String" resultMap="ExamUserResult">
        <include refid="selectExamUserVo"/>
        where exam_id = #{examId}
    </select>
        
    <insert id="insertExamUser" parameterType="ExamUser">
        insert into exam_exam_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="examId != null  and examId != ''  ">exam_id,</if>
			<if test="userId != null  and userId != ''  ">user_id,</if>
			<if test="createBy != null  and createBy != ''  ">create_by,</if>
			<if test="createDate != null  ">create_date,</if>
			<if test="updateBy != null  and updateBy != ''  ">update_by,</if>
			<if test="updateDate != null  ">update_date,</if>
			<if test="remark != null  and remark != ''  ">remark,</if>
			<if test="delFlag != null  and delFlag != ''  ">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="examId != null  and examId != ''  ">#{examId},</if>
			<if test="userId != null  and userId != ''  ">#{userId},</if>
			<if test="createBy != null  and createBy != ''  ">#{createBy},</if>
			<if test="createDate != null  ">#{createDate},</if>
			<if test="updateBy != null  and updateBy != ''  ">#{updateBy},</if>
			<if test="updateDate != null  ">#{updateDate},</if>
			<if test="remark != null  and remark != ''  ">#{remark},</if>
			<if test="delFlag != null  and delFlag != ''  ">#{delFlag},</if>
         </trim>
    </insert>
	 
    <update id="updateExamUser" parameterType="ExamUser">
        update exam_exam_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null  and userId != ''  ">user_id = #{userId},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="createDate != null  ">create_date = #{createDate},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateDate != null  ">update_date = #{updateDate},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
            <if test="delFlag != null  and delFlag != ''  ">del_flag = #{delFlag},</if>
        </trim>
        where exam_id = #{examId} and user_id = #{userId}
    </update>

	<delete id="deleteExamUserById" parameterType="String">
        delete from exam_exam_user where user_id = #{examId}
    </delete>
	
    <delete id="deleteExamUserByIds" parameterType="String">
        delete from exam_exam_user where user_id in
        <foreach item="examId" collection="array" open="(" separator="," close=")">
            #{examId}
        </foreach>
    </delete>
    
</mapper>